//FastJson

//JSON：用于JSON格式字符串与JSON对象及JavaBean之间的转换
//JSONObject：提供的json对象
//JSONArray：json数组对象
//SONObject当成一个Map<String,Object>来看，只是提供了更为丰富便捷的方法，方便我们对于对象属性的操作。//
//把JSONArray当做一个List<Object>，可以把JSONArray看成JSONObject对象的一个集合。
//由于JSONObject和JSONArray继承了JSON，所以说也可以直接使用两者对JSON格式字符串与JSON对象及javaBean之间做转换，不过为了避免混淆我们还是使用JSON。



Object on = JsonObject.parse(String);
JSONObject jsonObject = JSONObject.parseObject(String); 
JSONArray jsonArray = JSONObject.parseArray(String)
//parse+不同的类型返回不同的类型 JsonArray也一样
//JSONObject解析的类型为{key:value}
//JSONArray解析Json类型为[{key1:value1},{key2:value2}]

//遍历JSONArray和JSONObject key:value
//JSONObject
//无序Set<Map.Entry<K,V>>，Map.Entry 是Map中的一个接口，他的用途是表示一个映射项（里面有Key和Value），而Set<Map.Entry<K,V>>表示一个映射项的Set。Map.Entry里有相应的getKey和getValue方法，即JavaBean，让我们能够从一个项中取出Key和Value。
Set<Map.Entry<String,Object>> = jsonObject.entrySet();//把JSONObject变成一个无序的Set HashMap的底层实现用的时候一个Entry数组
for(Map.Entry<String,Map> entity: jsonObject.entrySet()){
  System.out.println(entity.getKey()+":"+entity.getValue());
}



//JSONArray
//实际把JSONArray遍历出每个JSONObject再对JSONObjec进行遍历
for(Object obect:jsonArray){
  JSONObject jsonObject = JSONObject.parseObject(object.toString());
  for(Set.Entity<String.Object> entity:jsonObject.entrySet()){
    System.out.println(entity.getKey()+":"+entity.getValue());
  }
}
